# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: trivy

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  #schedule:
    #- cron: '37 10 * * 5'

#permissions:
  #contents: read

jobs:
  build:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Build
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .

      #- name: Run Trivy vulnerability scanner in image mode
       # uses: aquasecurity/trivy-action@master
        #with:
         # image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          #format: 'sarif'
          #template: '@/contrib/sarif.tpl'
          #output: 'trivy-results-vuln.sarif'
          #vuln-type: 'os,library'
          #severity: 'CRITICAL,HIGH'

      #- name: Upload Trivy scan results to GitHub Security tab
        #uses: github/codeql-action/upload-sarif@v2
        #with:
          #sarif_file: 'trivy-results-vuln.sarif'
          #category: image-scan
            
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          #exit-code: '1'
          #ignore-unfixed: true
          format: 'json'  # 'sarif'
          output: trivy-results-repo.json # 'trivy-results-repo.sarif'
          #severity: 'CRITICAL,HIGH'

      #- name: Upload Trivy scan results to GitHub Security tab
        #uses: github/codeql-action/upload-sarif@v2
        #with:
          #sarif_file: 'trivy-results-repo.sarif'

      - name: Upload Trivy vulnerability repo scan
        uses: actions/upload-artifact@v3
        with:
          name: repo-scan
          path: trivy-results-repo.json

  import-semgrep-report:
    needs: build
    name: import trivy report
    runs-on: ubuntu-latest
    steps:
      - name: download scan results artifact
        #id: download-scan-results-artifact
        uses: actions/download-artifact@v3
        with:
          name: repo-scan
      - name: import scan results into defectdojo
        id: import-scan-results-into-defectdojo
        uses: portswigger-cloud/defectdojo-import-scan@v1.0.1
        with:
          defectdojo-url: http://localhost:8080/
          defectdojo-username: admin
          defectdojo-password: Admin123!
          defectdojo-product-type: GitHub
          defectdojo-product: ${{ github.event.repository.name }}
          defectdojo-environment-type: Production
          defectdojo-scan-type: Trivy Scan
          defectdojo-engagement-name: Github Actions Initiated Trivy Scan
          scan-results-file-name: trivy.json
